@using Kendo.Mvc.UI;
@using DocumentsExplorer.DTO;
@using DocumentsExplorerResource = DocumentsExplorer.Website.Resources.DocumentsExplorerResource;
@using SharedResource = DocumentsExplorer.Website.Resources.SharedResource;
@{
    ViewBag.Title = DocumentsExplorerResource.txtViewAllActivitySectors;
}


<div class="row">
<div class="col-lg-12">
    <div class="k-rtl">
        @(Html.Kendo().Grid<ActivitySectorDTO>()
                           .Name("grid")
                           .Columns(columns =>
                           {
                               columns.Bound(c => c.Id).Visible(false);
                               columns.Bound(p => p.Name).Title(DocumentsExplorerResource.txtName);
                               columns.Bound(p => p.CreateDate).Hidden(true);
                               columns.Bound(p => p.CreatedBy).Hidden(true);
                               columns.Command(command => { command.Edit().Text(@SharedResource.txtEdit).UpdateText(SharedResource.btnSave).CancelText(SharedResource.btnSave); command.Destroy().Text(@SharedResource.txtDelete); }).Width(250);
                           })
                           .ToolBar(toolbar => toolbar.Create().Text(@SharedResource.txtNewRecord))
                           .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("test")/*.DisplayDeleteConfirmation("Test")*/)
                           .Pageable()
                           .Sortable()
                           .Scrollable()
                           .HtmlAttributes(new { style = "height:550px;" })
                           .DataSource(dataSource => dataSource
                               .Ajax()
                               .PageSize(20)
                               .Events(events => events.Error("error_handler"))
                               .Model(model =>
                               {
                                   model.Id(p => p.Id);
                                   model.Field(p => p.CreateDate).Editable(false);
                               } )
                               .Create(update => update.Action("Create", "ActivitySector"))
                               .Read(read => read.Action("Read", "ActivitySector"))
                               .Update(update => update.Action("Update", "ActivitySector"))
                               .Destroy(update => update.Action("Destroy", "ActivitySector"))
                           )
        )


    </div>
</div>
</div>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>
